# This plugins lets us to write the policy YAML only once.
# It removes duplication of examples for both universal and kubernetes environments.
# The expected format is universal. It only works for policies V2 with a `spec` blocks.
require 'yaml'
module Jekyll
  module KumaPlugins
    module Liquid
      module Tags
        class PolicyYaml < ::Liquid::Block
          def initialize(tag_name, tabs_name, options)
             super
             @tabs_name = tabs_name
          end

          def render(context)
            content = super
            return "" unless content != ""
            site_data = context.registers[:site].config
            mesh_namespace = site_data['mesh_namespace']
            # remove ```yaml header and ``` footer
            pure_yaml = content.gsub(/`{3}yaml\n/, '').gsub(/`{3}/, '')
            yaml_data = YAML.load(pure_yaml)
            kube_hash = {
              "apiVersion" => "kuma.io/v1alpha1",
              "kind" => yaml_data["type"],
              "metadata" => {
                "name" => yaml_data["name"],
                "namespace" => mesh_namespace,
                "labels" => {
                  "kuma.io/mesh" => yaml_data["mesh"]
                }
              },
              "spec" => yaml_data["spec"]
            }
            # remove `---` header and end line generated by YAML.dump
            kube_yaml = YAML.dump(kube_hash).gsub(/^---\n/, '').chomp

            htmlContent = "
{% tabs #{@tabs_name} useUrlFragment=false %}
{% tab #{@tabs_name} Kubernetes %}
```yaml
#{kube_yaml}
```
{% endtab %}
{% tab #{@tabs_name} Universal %}
  #{content}
{% endtab %}
{% endtabs %}"
            ::Liquid::Template.parse(htmlContent).render(context)
          end
        end
      end
    end
  end
end

Liquid::Template.register_tag('policy_yaml', Jekyll::KumaPlugins::Liquid::Tags::PolicyYaml)
